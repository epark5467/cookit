{"version":3,"sources":["Components/RecipeItem.js","Components/IngredientSearch.js","Components/CuisineSelect.js","Components/MealType.js","Components/Intolerances.js","Components/Diets.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeItem","props","id","open","onClose","classes","recipeStyles","useState","recipeInfo","setRecipeInfo","useEffect","a","fetch","response","json","result","getRecipeInformation","Dialog","aria-labelledby","maxWidth","Grid","container","item","xs","DialogTitle","title","className","recipeMain","src","image","alt","recipeSummary","dangerouslySetInnerHTML","__html","summary","sources","href","sourceUrl","sourceName","instructions","keyInfo","score","scorePrimary","readyInMinutes","scoreSecondary","Divider","orientation","flexItem","extendedIngredients","length","healthScore","List","ingredientList","dense","subheader","ListSubheader","ingredientListHeader","component","map","ListItem","alignItems","ListItemAvatar","Avatar","name","ListItemText","primary","secondary","amount","unit","servings","nutrition","weightPerServing","nutrients","makeStyles","theme","margin","spacing","display","flexDirection","alignSelf","fontStyle","overflow","maxHeight","backgroundColor","justifyContent","width","fontSize","IngredientSearch","ingIncludeList","setIngIncludeList","ingExcludeList","setIngExcludeList","ingIncludeOptionsOpen","setIngIncludeOptionsOpen","ingIncludeOptions","setIngIncludeOptions","ingIncludeSearchInput","setIngIncludeSearchInput","ingIncludeOptionsLoading","ingExcludeOptionsOpen","setIngExcludeOptionsOpen","ingExcludeOptions","setIngExcludeOptions","ingExcludeSearchInput","setIngExcludeSearchInput","ingExcludeOptionsLoading","handleIngIncludeSearch","event","target","value","results","handleIngExcludeSearch","handleDeleteIngInclude","newList","filter","handleDeleteIngExclude","ingredientSearchContainer","Autocomplete","inputValue","options","getOptionLabel","option","onOpen","onChange","newValue","renderInput","params","TextField","variant","placeholder","InputProps","endAdornment","Fragment","CircularProgress","color","size","chipImg","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","bind","cuisines","CuisineSelect","cuisineState","setCuisineState","handleCuisineClick","checked","FormControl","formControl","FormGroup","FormControlLabel","control","Checkbox","label","MealTypes","mealType","setMealType","RadioGroup","Radio","intolerances","Intolerances","intolerancesState","setIntolerancesState","handleIntolerancesClick","Diets","dietValue","setDietValue","StyledAccordion","withStyles","root","border","boxShadow","borderBottom","expanded","Accordion","Home","homeStyles","recipeSearchInput","setRecipeSearchInput","expandedAccordion","setExpandedAccordion","totalResults","setTotalResults","setOffset","searchResults","setSearchResults","currentRecipe","setCurrentRecipe","openDialog","setOpenDialog","newRandomRecipe","recipes","handleAccordion","panel","isExpaned","Container","Typography","align","gutterBottom","direction","searchContainer","Paper","recipeSearchContainer","e","ranking","number","offset","addRecipeInformation","excludeIngredients","toString","includeIngredients","ints","push","type","cuisine","query","method","url","headers","axios","request","then","data","catch","error","console","AccordionSummary","expandIcon","aria-controls","AccordionDetails","accordionDetails","accordionExpanded","GridList","cellHeight","displayResults","GridListTile","cols","style","height","tile","Button","GridListTileBar","padding","objectFit","marginBottom","searchbarRoot","marginLeft","App","createMuiTheme","typography","h2","fontFamily","button","textTransform","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6fcabd1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Dialog, DialogTitle, Grid, List, ListItem, ListItemAvatar, Avatar, ListItemText, Divider, makeStyles, ListSubheader } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nexport default function RecipeItem(props) {\r\n    const { id, open, onClose } = props;\r\n  \r\n    const classes = recipeStyles();\r\n\r\n    const [recipeInfo, setRecipeInfo] = useState(null);\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n      onClose();\r\n    };\r\n\r\n    useEffect(() => {\r\n      const getRecipeInformation = async () => {      \r\n        if(id !== 0) {\r\n          let response = await fetch(\"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/\"+ id + \"/information?includeNutrition=true\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n              \"x-rapidapi-key\": \"cefe136227msh0b059b0dae03856p1ded42jsnfb9274bb08d9\",\r\n              \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\r\n            }\r\n          });\r\n\r\n          let result = await response.json();\r\n          setRecipeInfo(result);\r\n        };\r\n      };\r\n      getRecipeInformation();\r\n    }, [id]);\r\n    \r\n    return (\r\n      <Dialog \r\n        onClose={handleClose} \r\n        aria-labelledby=\"recipe-dialog-title\" \r\n        open={open}\r\n        maxWidth=\"md\"\r\n      >\r\n        \r\n        { recipeInfo !== null &&\r\n        <Grid container> \r\n          <Grid item xs={12}>\r\n            <DialogTitle id=\"recipe-dialog-title\">{recipeInfo.title}</DialogTitle>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <div className={classes.recipeMain}>\r\n              <img src={recipeInfo.image} alt={recipeInfo.title}/>\r\n              <div className={classes.recipeSummary}>\r\n                <div dangerouslySetInnerHTML={{__html: recipeInfo.summary}} />\r\n                <div className={classes.sources}>source: <a href={recipeInfo.sourceUrl}>{recipeInfo.sourceName}</a></div>\r\n              </div>  \r\n            </div>\r\n            <div className={classes.instructions}>\r\n              <div dangerouslySetInnerHTML={{__html: recipeInfo.instructions}} />  \r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <div className={classes.keyInfo}>\r\n              <div className={classes.score}>\r\n                <span className={classes.scorePrimary}>{recipeInfo.readyInMinutes}</span> \r\n                <span className={classes.scoreSecondary}>mins</span>\r\n              </div>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <div className={classes.score}>\r\n                <span className={classes.scorePrimary}>{recipeInfo.extendedIngredients.length}</span> \r\n                <span className={classes.scoreSecondary}>Ingredients</span>\r\n              </div>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <div className={classes.score}>\r\n                <span className={classes.scorePrimary}>{recipeInfo.healthScore}</span> \r\n                <span className={classes.scoreSecondary}>Health score</span>\r\n              </div>\r\n            </div>\r\n            <List \r\n              className={classes.ingredientList} \r\n              dense={true} \r\n              subheader={\r\n                <ListSubheader className={classes.ingredientListHeader} component=\"div\">\r\n                  Ingredients\r\n                </ListSubheader>\r\n              }\r\n            >\r\n              {recipeInfo.extendedIngredients.map((item) => (\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar alt={item.name} src={\"https://spoonacular.com/cdn/ingredients_100x100/\" + item.image}/>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={item.name}\r\n                  secondary={item.amount + \" \" + item.unit}\r\n                />\r\n              </ListItem>\r\n              ))}\r\n            </List>\r\n            <div>\r\n              <h3>Nutrition</h3>\r\n              <div>Serving Size {recipeInfo.servings} ({recipeInfo.nutrition.weightPerServing.amount}{recipeInfo.nutrition.weightPerServing.unit})</div>\r\n              <List dense={true}>\r\n                <ListItem>\r\n                  <ListItemText primary={\"Calories \" + recipeInfo.nutrition.nutrients[0].amount + \" kcal\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary={\"Fat \" + recipeInfo.nutrition.nutrients[1].amount + \"g\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary={\"Carbohydrates \" + recipeInfo.nutrition.nutrients[3].amount + \"g\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary={\"Cholesterol \" + recipeInfo.nutrition.nutrients[6].amount + \"mg\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary={\"Potassium \" + recipeInfo.nutrition.nutrients[17].amount + \"mg\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary={\"Protein \" + recipeInfo.nutrition.nutrients[8].amount + \"g\"} />\r\n                </ListItem>\r\n              </List>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        }\r\n      </Dialog>\r\n    );\r\n}\r\n\r\n\r\nconst recipeStyles = makeStyles((theme) => ({\r\n  recipeMain: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  recipeSummary: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  sources: {\r\n    alignSelf: 'flex-end',\r\n    fontStyle: 'italic',\r\n  },\r\n  ingredientList: {\r\n    overflow: 'auto',\r\n    maxHeight: 300\r\n  },\r\n  ingredientListHeader: {\r\n    backgroundColor: 'white',\r\n  },\r\n  keyInfo: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  score : {\r\n    display: 'flex',\r\n    flexDirection : 'column',\r\n    justifyContent : 'center',\r\n    alignItems : 'center',\r\n    margin: '.25rem',\r\n    width: '5rem',\r\n  },\r\n  scorePrimary: {\r\n    fontSize: '2rem',\r\n  },\r\n  scoreSecondary: {\r\n    fontSize: '.7rem',\r\n  },\r\n  instructions: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\n/***\r\n * {recipeInfo.extendedIngredients.map((item) => (\r\n                \r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar alt={item.name} src={\"https://spoonacular.com/cdn/ingredients_100x100/\" + item.image}/>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={item.name}\r\n                  secoundary={item.amount + \" \" + item.unit}\r\n                />\r\n              </ListItem>\r\n              ))}\r\n * \r\n * \r\n * \r\n * \r\n */","import React, { useEffect, useState, useRef } from 'react';\nimport { TextField, CircularProgress, Grid, List, ListItem, ListItemAvatar, ListItemText, Avatar, \n         ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab'; \nimport { MdDelete } from 'react-icons/md';\nimport './RecipeItem';\nimport RecipeItem from './RecipeItem';\n\n\nfunction IngredientSearch(props) {\n\n  const { classes, ingIncludeList, setIngIncludeList, ingExcludeList, setIngExcludeList } = props;\n\n  const [ingIncludeOptionsOpen, setIngIncludeOptionsOpen] = useState(false);\n  const [ingIncludeOptions, setIngIncludeOptions] = useState([]);\n  const [ingIncludeSearchInput, setIngIncludeSearchInput] = useState(\"\");\n  const ingIncludeOptionsLoading = ingIncludeOptionsOpen && ingIncludeOptions.length === 0;\n\n  const [ingExcludeOptionsOpen, setIngExcludeOptionsOpen] = useState(false);\n  const [ingExcludeOptions, setIngExcludeOptions] = useState([]);\n  const [ingExcludeSearchInput, setIngExcludeSearchInput] = useState(\"\");\n  const ingExcludeOptionsLoading = ingExcludeOptionsOpen && ingExcludeOptions.length === 0;\n\n  const handleIngIncludeSearch = async (event) => {\n    setIngIncludeSearchInput(event.target.value);\n    const response = await fetch(\"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/autocomplete?number=100&metaInformation=true&query=\" + event.target.value, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"cefe136227msh0b059b0dae03856p1ded42jsnfb9274bb08d9\",\n        \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n      }\n    });\n\n    let results = await response.json();\n    setIngIncludeOptions(results);\n  };\n\n  const handleIngExcludeSearch = async (event) => {\n    setIngExcludeSearchInput(event.target.value);\n    const response = await fetch(\"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/ingredients/autocomplete?number=100&metaInformation=true&query=\" + event.target.value, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"cefe136227msh0b059b0dae03856p1ded42jsnfb9274bb08d9\",\n        \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n      }\n    });\n\n    let results = await response.json();\n    setIngExcludeOptions(results);\n  };\n\n  const handleIngIncludeOptionClick = (value) => {\n    if(value === null)\n      return;\n    setIngIncludeList(ingIncludeList => [...ingIncludeList, value]);\n    setIngIncludeSearchInput(\"\");\n  };\n\n  const handleIngExcludeOptionClick = (value) => {\n    if(value === null)\n      return;\n    setIngExcludeList(ingExcludeList => [...ingExcludeList, value]);\n    setIngExcludeSearchInput(\"\");\n  };\n\n  const handleDeleteIngInclude = (name) => {\n    let newList = ingIncludeList.filter(item => item.name !== name);\n    setIngIncludeList(newList);\n  };\n\n  const handleDeleteIngExclude = (name) => {\n    let newList = ingExcludeList.filter(item => item.name !== name);\n    setIngExcludeList(newList);\n  };\n\n\n  return (\n    <div className={classes.ingredientSearchContainer}>\n        <Autocomplete\n          id=\"ingredient-search-autocomplete\"\n          inputValue={ingIncludeSearchInput}\n          options={ingIncludeOptions}\n          getOptionLabel={(option) => option.name}\n          open={ingIncludeOptionsOpen}\n          onOpen={() => {setIngIncludeOptionsOpen(true)}}\n          onClose={()=> {setIngIncludeOptionsOpen(false)}}\n          onChange={(event, newValue) => {handleIngIncludeOptionClick(newValue)}}\n          renderInput={params => (\n            <TextField \n              {...params}\n              variant=\"outlined\"\n              placeholder=\"Ingredients\"\n              onChange={handleIngIncludeSearch}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment:(\n                  <React.Fragment>\n                    {ingIncludeOptionsLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )}\n        />\n\n        <List className=\"ingredient-include-list\">\n          { ingIncludeList.length > 0 && \n            ingIncludeList.map((item) => {\n              return  <ListItem key={item.id}>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <img className={classes.chipImg} alt={item.name} src={\"https://spoonacular.com/cdn/ingredients_100x100/\" + item.image} />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText>\n                          {item.name}    \n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDeleteIngInclude.bind(this, item.name)}>\n                            <MdDelete />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                  }) }\n          </List>   \n        <Autocomplete\n            id=\"ingredient-search-autocomplete\"\n            inputValue={ingExcludeSearchInput}\n            options={ingExcludeOptions}\n            getOptionLabel={(option) => option.name}\n            open={ingExcludeOptionsOpen}\n            onOpen={() => {setIngExcludeOptionsOpen(true)}}\n            onClose={()=> {setIngExcludeOptionsOpen(false)}}\n            onChange={(event, newValue) => {handleIngExcludeOptionClick(newValue)}}\n            renderInput={params => (\n              <TextField \n                {...params}\n                variant=\"outlined\"\n                placeholder=\"Ingredients\"\n                onChange={handleIngExcludeSearch}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment:(\n                    <React.Fragment>\n                      {ingExcludeOptionsLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n\n          <List className=\"ingredient-list\">\n            { ingExcludeList.length > 0 && \n              ingExcludeList.map((item) => {\n                return  <ListItem key={item.id}>\n                          <ListItemAvatar>\n                            <Avatar>\n                              <img className={classes.chipImg} alt={item.name} src={\"https://spoonacular.com/cdn/ingredients_100x100/\" + item.image} />\n                            </Avatar>\n                          </ListItemAvatar>\n                          <ListItemText>\n                            {item.name}    \n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDeleteIngExclude.bind(this, item.name)}>\n                              <MdDelete />\n                            </IconButton>\n                          </ListItemSecondaryAction>\n                        </ListItem>\n                    }) }\n          </List> \n    </div>\n  );\n}\n\nexport default IngredientSearch;\n\n","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, FormGroup, FormControlLabel, Checkbox, makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\nconst cuisines = [\r\n    'African',\r\n    'American',\r\n    'British',\r\n    'Cajun',\r\n    'Caribbean',\r\n    'Chinese',\r\n    'Eastern European',\r\n    'European',\r\n    'French',\r\n    'German',\r\n    'Greek',\r\n    'Indian',\r\n    'Irish',\r\n    'Italian',\r\n    'Japanese',\r\n    'Jewish',\r\n    'Korean',\r\n    'Latin American',\r\n    'Mediterranean',\r\n    'Mexican',\r\n    'Middle Eastern',\r\n    'Nordic',\r\n    'Southern',\r\n    'Spanish',\r\n    'Thai',\r\n    'Vietnamese'\r\n]\r\n\r\n\r\nexport default function CuisineSelect(props) {\r\n\r\n    const { classes, cuisineState, setCuisineState } = props;\r\n    \r\n    useEffect(() => {\r\n        setCuisineState({\r\n            'African': true,\r\n            'American': true,\r\n            'British': true,\r\n            'Cajun': true,\r\n            'Caribbean': true,\r\n            'Chinese': true,\r\n            'Eastern European': true,\r\n            'European': true,\r\n            'French': true,\r\n            'German': true,\r\n            'Greek': true,\r\n            'Indian': true,\r\n            'Irish': true,\r\n            'Italian': true,\r\n            'Japanese': true,\r\n            'Jewish': true,\r\n            'Korean': true,\r\n            'Latin American': true,\r\n            'Mediterranean': true,\r\n            'Mexican': true,\r\n            'Middle Eastern': true,\r\n            'Nordic': true,\r\n            'Southern': true,\r\n            'Spanish': true,\r\n            'Thai': true,\r\n            'Vietnamese': true\r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n    const handleCuisineClick = (event) => {\r\n        setCuisineState({ ...cuisineState, [event.target.name]: event.target.checked });\r\n    };\r\n    \r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormGroup>\r\n                {cuisineState !== null &&\r\n                    cuisines.map((item) => (\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={cuisineState[item]} onChange={handleCuisineClick} name={item} />}\r\n                        label={item}\r\n                    />\r\n                ))}\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function MealTypes(props) {\r\n\r\n    const { classes, mealType, setMealType } = props;\r\n\r\n    \r\n    const handleMealClick = (event) => {\r\n        setMealType(event.target.value);\r\n    };\r\n    \r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <RadioGroup aria-label=\"diets\" name=\"diets\" value={mealType} onChange={handleMealClick}>\r\n                <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\r\n                <FormControlLabel value=\"main course\" control={<Radio />} label=\"Main course\" />\r\n                <FormControlLabel value=\"side dish\" control={<Radio />} label=\"Side dish\" />\r\n                <FormControlLabel value=\"dessert\" control={<Radio />} label=\"Dessert\" />\r\n                <FormControlLabel value=\"appetizer\" control={<Radio />} label=\"Appetizer\" />\r\n                <FormControlLabel value=\"salad\" control={<Radio />} label=\"Salad\" />\r\n                <FormControlLabel value=\"bread\" control={<Radio />} label=\"Bread\" />\r\n                <FormControlLabel value=\"breakfast\" control={<Radio />} label=\"Breakfast\" />\r\n                <FormControlLabel value=\"beverage\" control={<Radio />} label=\"Beverage\" />\r\n                <FormControlLabel value=\"marinade\" control={<Radio />} label=\"Marinade\" />\r\n                <FormControlLabel value=\"sauce\" control={<Radio />} label=\"Sauce\" />\r\n                <FormControlLabel value=\"snack\" control={<Radio />} label=\"Snack\" />\r\n                <FormControlLabel value=\"drink\" control={<Radio />} label=\"Drink\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, FormGroup, FormControlLabel, Checkbox, makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\nconst intolerances = [\r\n    'Dairy',\r\n    'Egg',\r\n    'Gluten',\r\n    'Grain',\r\n    'Peanut',\r\n    'Seafood',\r\n    'Sesame',\r\n    'Shellfish',\r\n    'Soy',\r\n    'Sulfite',\r\n    'Tree Nut',\r\n    'Wheat'\r\n];\r\n\r\n\r\nexport default function Intolerances(props) {\r\n\r\n    const { classes, intolerancesState, setIntolerancesState } = props;\r\n    \r\n    useEffect(() => {\r\n        setIntolerancesState({\r\n            'Dairy': false,\r\n            'Egg': false,\r\n            'Gluten': false,\r\n            'Grain': false,\r\n            'Peanut': false,\r\n            'Seafood': false,\r\n            'Sesame': false,\r\n            'Shellfish': false,\r\n            'Soy': false,\r\n            'Sulfite': false,\r\n            'Tree Nut': false,\r\n            'Wheat': false\r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n    const handleIntolerancesClick = (event) => {\r\n        setIntolerancesState({ ...intolerancesState, [event.target.name]: event.target.checked });\r\n    };\r\n    \r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormGroup>\r\n                {intolerancesState !== null &&\r\n                    intolerances.map((item) => (\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={intolerancesState[item]} onChange={handleIntolerancesClick} name={item} />}\r\n                        label={item}\r\n                    />\r\n                ))}\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}","import React from 'react';\r\nimport { FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function Diets(props) {\r\n\r\n    const { classes, dietValue, setDietValue } = props;\r\n\r\n    const handleDietClick = (event) => {\r\n        setDietValue(event.target.value);\r\n    };\r\n    \r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <RadioGroup aria-label=\"diets\" name=\"diets\" value={dietValue} onChange={handleDietClick}>\r\n                <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\r\n                <FormControlLabel value=\"gluten free\" control={<Radio />} label=\"Gluten Free\" />\r\n                <FormControlLabel value=\"ketogenic\" control={<Radio />} label=\"Ketogenic\" />\r\n                <FormControlLabel value=\"vegetarian\" control={<Radio />} label=\"Vegetarian\" />\r\n                <FormControlLabel value=\"lacto-vegetarian\" control={<Radio />} label=\"Lacto-Vegetarian\" />\r\n                <FormControlLabel value=\"ovo-vegetarian\" control={<Radio />} label=\"Ovo-Vegetarian\" />\r\n                <FormControlLabel value=\"vegan\" control={<Radio />} label=\"Vegan\" />\r\n                <FormControlLabel value=\"paleo\" control={<Radio />} label=\"Paleo\" />\r\n                <FormControlLabel value=\"primal\" control={<Radio />} label=\"Primal\" />\r\n                <FormControlLabel value=\"whole30\" control={<Radio />} label=\"Whole30\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Paper, Grid, Typography, TextField, Accordion, AccordionDetails, AccordionSummary, \r\n         GridList, GridListTile, GridListTileBar, ListSubheader, Button, IconButton, makeStyles } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MdExpandMore } from 'react-icons/md';\r\nimport { IoMdSearch } from 'react-icons/io';\r\nimport { GrRestaurant } from 'react-icons/gr';\r\nimport IngredientSearch from './IngredientSearch';\r\nimport CuisineSelect from './CuisineSelect';\r\nimport MealTypes from './MealType';\r\nimport Intolerances from './Intolerances';\r\nimport Diets from './Diets';\r\nimport RecipeItem from './RecipeItem';\r\nimport { yellow } from '@material-ui/core/colors';\r\n\r\n\r\n\r\nconst StyledAccordion = withStyles({\r\n    root: {\r\n        border: '1px solid rgba(0, 0, 0, .125)',\r\n        boxShadow: 'none',\r\n        \r\n        '&:not(:last-child)': {\r\n            borderBottom: 0,\r\n        },\r\n        '&:before': {\r\n            display: 'none',\r\n        },\r\n        '&$expanded': {\r\n            margin: 'auto',\r\n        },\r\n    },\r\n    expanded: {},\r\n})(Accordion);\r\n\r\nexport default function Home () {\r\n\r\n    const classes = homeStyles();\r\n    \r\n    \r\n\r\n    \r\n\r\n    const [recipeSearchInput, setRecipeSearchInput] = useState(\"\");\r\n    const [expandedAccordion, setExpandedAccordion] = useState(false);\r\n\r\n    const [ingIncludeList, setIngIncludeList] = useState([]);\r\n    const [ingExcludeList, setIngExcludeList] = useState([]);\r\n    \r\n    const [cuisineState, setCuisineState] = useState(null);\r\n    const [mealType, setMealType] = useState(\"all\");\r\n    const [intolerancesState, setIntolerancesState] = useState(null);\r\n    const [dietValue, setDietValue] = useState(\"all\");\r\n\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const [currentRecipe, setCurrentRecipe] = useState(0);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        newRandomRecipe();\r\n    }, [])\r\n\r\n\r\n    const newRandomRecipe = async () => {\r\n        const response = await fetch(\"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/random?number=10\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"cefe136227msh0b059b0dae03856p1ded42jsnfb9274bb08d9\",\r\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\r\n            }\r\n        });\r\n\r\n        \r\n        const result = await response.json();\r\n        setSearchResults(result.recipes);\r\n    };\r\n\r\n    const handleRecipeSearch = (e) => {\r\n        setRecipeSearchInput(e.target.value);\r\n    };\r\n\r\n    const handleAccordion = (panel) => (event, isExpaned) => {\r\n        setExpandedAccordion(isExpaned ? panel : false);\r\n    };\r\n\r\n    const searchRecipes = () => {\r\n        \r\n        let params = {\r\n            ranking: '2',\r\n            number: '10',\r\n            offset: '0',\r\n            addRecipeInformation: 'false'\r\n        };\r\n\r\n        if (ingExcludeList.length > 0) {\r\n            params = {...params, excludeIngredients: ingExcludeList.map((item) => { return item.name }).toString()};\r\n        }\r\n\r\n        if (ingIncludeList.length > 0) {\r\n            params = {...params, includeIngredients: ingIncludeList.map((item) => { return item.name }).toString()};\r\n        }\r\n\r\n        let ints = [];\r\n        for(var item in intolerancesState) {\r\n            if(intolerancesState[item] === true)\r\n                ints.push(item);\r\n        }\r\n\r\n        if(ints.length > 0)\r\n            params = {...params, intolerances: ints.toString()};\r\n\r\n        \r\n        if(mealType !== \"all\")\r\n            params = {...params, type: mealType};\r\n        \r\n        \r\n        let cuisines = [];\r\n        for(var item in cuisineState) {\r\n            if(cuisineState[item] === true)\r\n                cuisines.push(item);\r\n        }\r\n\r\n        if(cuisines.length > 0)\r\n            params = {...params, cuisine: cuisines.toString()};\r\n\r\n        if (recipeSearchInput !== null || recipeSearchInput !== \"\")\r\n            params = {...params, query: recipeSearchInput};\r\n\r\n        \r\n        \r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/complexSearch',\r\n            params,\r\n            headers: {\r\n              'x-rapidapi-key': 'cefe136227msh0b059b0dae03856p1ded42jsnfb9274bb08d9',\r\n              'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com'\r\n            }\r\n          };\r\n\r\n\r\n        \r\n        axios.request(options).then(function (response) {\r\n            setSearchResults(response.data.results);\r\n            setOffset(response.data.offset);\r\n            setTotalResults(response.data.totalResults);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    };\r\n\r\n    const handleTileClick = (id) => () => {\r\n        setCurrentRecipe(id);\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <Container maxWidth=\"md\" >\r\n            <Typography \r\n                className={classes.title}\r\n                align=\"center\" \r\n                variant=\"h2\"\r\n                gutterBottom=\"true\"\r\n            >\r\n                <GrRestaurant />\r\n                CookIt!\r\n            </Typography>\r\n            <div className={classes.root}>           \r\n                <Grid \r\n                    container\r\n                    direction=\"column\"\r\n                    className={classes.searchContainer}\r\n                >\r\n                    <Grid item>\r\n                        <Paper className={classes.recipeSearchContainer}>\r\n                            <TextField \r\n                                className={classes.recipeSearchInput}\r\n                                id=\"recipe-search-input\"\r\n                                value={recipeSearchInput}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                placeholder=\"recipes\"\r\n                                onChange={handleRecipeSearch}\r\n                            />    \r\n                            <IconButton onClick={searchRecipes}>\r\n                                <IoMdSearch />    \r\n                            </IconButton>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item className=\"search-option\">\r\n                        \r\n                        <StyledAccordion \r\n                            expanded={expandedAccordion === 'mealType'} \r\n                            onChange={handleAccordion('mealType')}\r\n                        >\r\n                            <AccordionSummary\r\n                                expandIcon={<MdExpandMore />}\r\n                                aria-controls=\"mealType-content\"\r\n                                id=\"mealType-container\"\r\n                            >\r\n                                <Typography >Meal Type</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className={classes.accordionDetails}>\r\n                                <MealTypes classes={classes} mealType={mealType} setMealType={setMealType} />\r\n                            </AccordionDetails>\r\n                        </StyledAccordion>\r\n                        \r\n                        <StyledAccordion \r\n                            expanded={expandedAccordion === 'cuisine'} \r\n                            onChange={handleAccordion('cuisine')}\r\n                            classes={{expanded: classes.accordionExpanded}}\r\n                        >\r\n                            <AccordionSummary\r\n                                expandIcon={<MdExpandMore />}\r\n                                aria-controls=\"cuisine-content\"\r\n                                id=\"cuisine-container\"\r\n                            >\r\n                                <Typography >Cuisine</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className={classes.accordionDetails}>\r\n                                <CuisineSelect classes={classes} cuisineState={cuisineState} setCuisineState={setCuisineState} />\r\n                            </AccordionDetails>\r\n                        </StyledAccordion>\r\n                        <StyledAccordion expanded={expandedAccordion === 'ingredients'} onChange={handleAccordion('ingredients')}>\r\n                            <AccordionSummary\r\n                                expandIcon={<MdExpandMore />}\r\n                                aria-controls=\"ingredient-content\"\r\n                                id=\"ingredient-container\"\r\n                            >\r\n                                <Typography >Ingredients</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className={classes.accordionDetails}>\r\n                                <IngredientSearch \r\n                                    classes={classes}\r\n                                    ingIncludeList={ingIncludeList}\r\n                                    ingExcludeList={ingExcludeList}\r\n                                    setIngIncludeList={setIngIncludeList}\r\n                                    setIngExcludeList={setIngExcludeList}\r\n                                />\r\n                            </AccordionDetails>\r\n                        </StyledAccordion>\r\n                        <StyledAccordion expanded={expandedAccordion === 'intolerances'} onChange={handleAccordion('intolerances')}>\r\n                            <AccordionSummary\r\n                                expandIcon={<MdExpandMore />}\r\n                                aria-controls=\"intolerances-content\"\r\n                                id=\"intolerances-container\"\r\n                            >\r\n                                <Typography >Intolerances</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className={classes.accordionDetails}>\r\n                                <Intolerances classes={classes} intolerancesState={intolerancesState} setIntolerancesState={setIntolerancesState} />\r\n                            </AccordionDetails>\r\n                        </StyledAccordion>\r\n                        <StyledAccordion expanded={expandedAccordion === 'diets'} onChange={handleAccordion('diets')}>\r\n                            <AccordionSummary\r\n                                expandIcon={<MdExpandMore />}\r\n                                aria-controls=\"diets-content\"\r\n                                id=\"diets-container\"\r\n                            >\r\n                                <Typography >Diets</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className={classes.accordionDetails}>\r\n                                <Diets classes={classes} dietValue={dietValue} setDietValue = {setDietValue} />\r\n                            </AccordionDetails>\r\n                        </StyledAccordion>\r\n                    </Grid>\r\n                </Grid>    \r\n                <GridList cellHeight={180} className={classes.displayResults}>\r\n                    <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                    <ListSubheader component=\"div\">Found {totalResults} recipes </ListSubheader>\r\n                    </GridListTile>\r\n                    {searchResults.map((tile) => (\r\n                        \r\n                    <GridListTile key={tile.id}>\r\n                        <Button onClick={handleTileClick(tile.id)}>\r\n                        <img src={tile.image} alt={tile.title} />  \r\n                        </Button>\r\n                        <GridListTileBar\r\n                            title={tile.title}\r\n                        />\r\n                    </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n            <RecipeItem id={currentRecipe} open={openDialog} onClose={handleDialogClose} />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst homeStyles = makeStyles((theme) => ({\r\n    title: {\r\n        margin: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n    },\r\n    recipeSearchContainer: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    searchContainer: {\r\n        width: '40%',\r\n    },\r\n    displayResults: {\r\n        width: '60%',\r\n    },\r\n    chipImg: {\r\n        objectFit: 'contain',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    accordionDetails: {\r\n        padding: 0,\r\n    },\r\n    accordionExpanded: {\r\n        marginBottom: theme.spacing(0),\r\n    },\r\n    ingredientSearchContainer: {\r\n        width: '100%',\r\n        margin: theme.spacing(2),\r\n    },\r\n    searchbarRoot: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\n\nimport { createMuiTheme, CssBaseline, MuiThemeProvider } from '@material-ui/core';\n\nimport './App.css';\nimport Home from './Components/Home';\nfunction App() {\n\n  const font = \"'Squada One', cursive\";\n\n  const theme = createMuiTheme({\n    typography: {\n      h2: {\n        fontFamily: font,\n      },\n      button: {\n        textTransform: \"none\"\n      }\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n    <React.Fragment>\n      <CssBaseline />\n      <Home />\n    </React.Fragment>  \n    </MuiThemeProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}